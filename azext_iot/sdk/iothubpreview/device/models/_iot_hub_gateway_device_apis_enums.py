# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.4.5, generator: @autorest/python@5.8.1)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class AuthenticationMechanismType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The type of authentication used to connect to the service.
    """

    SAS = "sas"
    SELF_SIGNED = "selfSigned"
    CERTIFICATE_AUTHORITY = "certificateAuthority"
    NONE = "none"

class DeviceConnectionState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The state of the device.
    """

    DISCONNECTED = "Disconnected"
    CONNECTED = "Connected"

class DeviceStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The status of the device. If the status disabled, a device cannot connect to the service.
    """

    ENABLED = "enabled"
    DISABLED = "disabled"

class ModuleConnectionState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The connection state of the device.
    """

    DISCONNECTED = "Disconnected"
    CONNECTED = "Connected"
