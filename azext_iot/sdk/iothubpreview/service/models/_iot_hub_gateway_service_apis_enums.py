# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.4.5, generator: @autorest/python@5.8.1)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class AuthenticationMechanismType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The type of authentication used to connect to the service.
    """

    SAS = "sas"
    SELF_SIGNED = "selfSigned"
    CERTIFICATE_AUTHORITY = "certificateAuthority"
    NONE = "none"

class DeviceConnectionState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The state of the device.
    """

    DISCONNECTED = "Disconnected"
    CONNECTED = "Connected"

class DeviceRegistryOperationErrorCode(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The error code.
    """

    INVALID_ERROR_CODE = "InvalidErrorCode"
    GENERIC_BAD_REQUEST = "GenericBadRequest"
    INVALID_PROTOCOL_VERSION = "InvalidProtocolVersion"
    DEVICE_INVALID_RESULT_COUNT = "DeviceInvalidResultCount"
    INVALID_OPERATION = "InvalidOperation"
    ARGUMENT_INVALID = "ArgumentInvalid"
    ARGUMENT_NULL = "ArgumentNull"
    IOT_HUB_FORMAT_ERROR = "IotHubFormatError"
    DEVICE_STORAGE_ENTITY_SERIALIZATION_ERROR = "DeviceStorageEntitySerializationError"
    BLOB_CONTAINER_VALIDATION_ERROR = "BlobContainerValidationError"
    IMPORT_WARNING_EXISTS_ERROR = "ImportWarningExistsError"
    INVALID_SCHEMA_VERSION = "InvalidSchemaVersion"
    DEVICE_DEFINED_MULTIPLE_TIMES = "DeviceDefinedMultipleTimes"
    DESERIALIZATION_ERROR = "DeserializationError"
    BULK_REGISTRY_OPERATION_FAILURE = "BulkRegistryOperationFailure"
    DEFAULT_STORAGE_ENDPOINT_NOT_CONFIGURED = "DefaultStorageEndpointNotConfigured"
    INVALID_FILE_UPLOAD_CORRELATION_ID = "InvalidFileUploadCorrelationId"
    EXPIRED_FILE_UPLOAD_CORRELATION_ID = "ExpiredFileUploadCorrelationId"
    INVALID_STORAGE_ENDPOINT = "InvalidStorageEndpoint"
    INVALID_MESSAGING_ENDPOINT = "InvalidMessagingEndpoint"
    INVALID_FILE_UPLOAD_COMPLETION_STATUS = "InvalidFileUploadCompletionStatus"
    INVALID_STORAGE_ENDPOINT_OR_BLOB = "InvalidStorageEndpointOrBlob"
    REQUEST_CANCELED = "RequestCanceled"
    INVALID_STORAGE_ENDPOINT_PROPERTY = "InvalidStorageEndpointProperty"
    ETAG_DOES_NOT_MATCH = "EtagDoesNotMatch"
    REQUEST_TIMED_OUT = "RequestTimedOut"
    UNSUPPORTED_OPERATION_ON_REPLICA = "UnsupportedOperationOnReplica"
    NULL_MESSAGE = "NullMessage"
    CONNECTION_FORCEFULLY_CLOSED_ON_NEW_CONNECTION = "ConnectionForcefullyClosedOnNewConnection"
    INVALID_DEVICE_SCOPE = "InvalidDeviceScope"
    CONNECTION_FORCEFULLY_CLOSED_ON_FAULT_INJECTION = "ConnectionForcefullyClosedOnFaultInjection"
    CONNECTION_REJECTED_ON_FAULT_INJECTION = "ConnectionRejectedOnFaultInjection"
    INVALID_ENDPOINT_AUTHENTICATION_TYPE = "InvalidEndpointAuthenticationType"
    MANAGED_IDENTITY_NOT_ENABLED = "ManagedIdentityNotEnabled"
    INVALID_ROUTE_TEST_INPUT = "InvalidRouteTestInput"
    INVALID_SOURCE_ON_ROUTE = "InvalidSourceOnRoute"
    ROUTING_NOT_ENABLED = "RoutingNotEnabled"
    INVALID_CONTENT_ENCODING_OR_TYPE = "InvalidContentEncodingOrType"
    INVALID_ENDORSEMENT_KEY = "InvalidEndorsementKey"
    INVALID_REGISTRATION_ID = "InvalidRegistrationId"
    INVALID_STORAGE_ROOT_KEY = "InvalidStorageRootKey"
    INVALID_ENROLLMENT_GROUP_ID = "InvalidEnrollmentGroupId"
    TOO_MANY_ENROLLMENTS = "TooManyEnrollments"
    REGISTRATION_ID_DEFINED_MULTIPLE_TIMES = "RegistrationIdDefinedMultipleTimes"
    CUSTOM_ALLOCATION_FAILED = "CustomAllocationFailed"
    CUSTOM_ALLOCATION_IOT_HUB_NOT_SPECIFIED = "CustomAllocationIotHubNotSpecified"
    CUSTOM_ALLOCATION_UNAUTHORIZED_ACCESS = "CustomAllocationUnauthorizedAccess"
    CANNOT_REGISTER_MODULE_TO_MODULE = "CannotRegisterModuleToModule"
    TENANT_HUB_ROUTING_NOT_ENABLED = "TenantHubRoutingNotEnabled"
    INVALID_CONFIGURATION_TARGET_CONDITION = "InvalidConfigurationTargetCondition"
    INVALID_CONFIGURATION_CONTENT = "InvalidConfigurationContent"
    CANNOT_MODIFY_IMMUTABLE_CONFIGURATION_CONTENT = "CannotModifyImmutableConfigurationContent"
    INVALID_CONFIGURATION_CUSTOM_METRICS_QUERY = "InvalidConfigurationCustomMetricsQuery"
    INVALID_PN_P_INTERFACE_DEFINITION = "InvalidPnPInterfaceDefinition"
    INVALID_PN_P_DESIRED_PROPERTIES = "InvalidPnPDesiredProperties"
    INVALID_PN_P_REPORTED_PROPERTIES = "InvalidPnPReportedProperties"
    INVALID_PN_P_WRITABLE_REPORTED_PROPERTIES = "InvalidPnPWritableReportedProperties"
    INVALID_DIGITAL_TWIN_JSON_PATCH = "InvalidDigitalTwinJsonPatch"
    INVALID_DIGITAL_TWIN_PAYLOAD = "InvalidDigitalTwinPayload"
    INVALID_DIGITAL_TWIN_PATCH = "InvalidDigitalTwinPatch"
    INVALID_DIGITAL_TWIN_PATCH_PATH = "InvalidDigitalTwinPatchPath"
    GENERIC_UNAUTHORIZED = "GenericUnauthorized"
    IOT_HUB_NOT_FOUND = "IotHubNotFound"
    IOT_HUB_UNAUTHORIZED_ACCESS = "IotHubUnauthorizedAccess"
    IOT_HUB_UNAUTHORIZED = "IotHubUnauthorized"
    ELASTIC_POOL_NOT_FOUND = "ElasticPoolNotFound"
    SYSTEM_MODULE_MODIFY_UNAUTHORIZED_ACCESS = "SystemModuleModifyUnauthorizedAccess"
    GENERIC_FORBIDDEN = "GenericForbidden"
    IOT_HUB_SUSPENDED = "IotHubSuspended"
    IOT_HUB_QUOTA_EXCEEDED = "IotHubQuotaExceeded"
    JOB_QUOTA_EXCEEDED = "JobQuotaExceeded"
    DEVICE_MAXIMUM_QUEUE_DEPTH_EXCEEDED = "DeviceMaximumQueueDepthExceeded"
    IOT_HUB_MAX_CBS_TOKEN_EXCEEDED = "IotHubMaxCbsTokenExceeded"
    DEVICE_MAXIMUM_ACTIVE_FILE_UPLOAD_LIMIT_EXCEEDED = "DeviceMaximumActiveFileUploadLimitExceeded"
    DEVICE_MAXIMUM_QUEUE_SIZE_EXCEEDED = "DeviceMaximumQueueSizeExceeded"
    ROUTING_ENDPOINT_RESPONSE_FORBIDDEN = "RoutingEndpointResponseForbidden"
    INVALID_MESSAGE_EXPIRY_TIME = "InvalidMessageExpiryTime"
    OPERATION_NOT_AVAILABLE_IN_CURRENT_TIER = "OperationNotAvailableInCurrentTier"
    KEY_ENCRYPTION_KEY_REVOKED = "KeyEncryptionKeyRevoked"
    DEVICE_MODEL_MAX_PROPERTIES_EXCEEDED = "DeviceModelMaxPropertiesExceeded"
    DEVICE_MODEL_MAX_INDEXABLE_PROPERTIES_EXCEEDED = "DeviceModelMaxIndexablePropertiesExceeded"
    IOT_DPS_SUSPENDED = "IotDpsSuspended"
    IOT_DPS_SUSPENDING = "IotDpsSuspending"
    GENERIC_NOT_FOUND = "GenericNotFound"
    DEVICE_NOT_FOUND = "DeviceNotFound"
    JOB_NOT_FOUND = "JobNotFound"
    QUOTA_METRIC_NOT_FOUND = "QuotaMetricNotFound"
    SYSTEM_PROPERTY_NOT_FOUND = "SystemPropertyNotFound"
    AMQP_ADDRESS_NOT_FOUND = "AmqpAddressNotFound"
    ROUTING_ENDPOINT_RESPONSE_NOT_FOUND = "RoutingEndpointResponseNotFound"
    CERTIFICATE_NOT_FOUND = "CertificateNotFound"
    ELASTIC_POOL_TENANT_HUB_NOT_FOUND = "ElasticPoolTenantHubNotFound"
    MODULE_NOT_FOUND = "ModuleNotFound"
    AZURE_TABLE_STORE_NOT_FOUND = "AzureTableStoreNotFound"
    IOT_HUB_FAILING_OVER = "IotHubFailingOver"
    FEATURE_NOT_SUPPORTED = "FeatureNotSupported"
    DIGITAL_TWIN_INTERFACE_NOT_FOUND = "DigitalTwinInterfaceNotFound"
    QUERY_STORE_CLUSTER_NOT_FOUND = "QueryStoreClusterNotFound"
    DEVICE_NOT_ONLINE = "DeviceNotOnline"
    DEVICE_CONNECTION_CLOSED_REMOTELY = "DeviceConnectionClosedRemotely"
    ENROLLMENT_NOT_FOUND = "EnrollmentNotFound"
    DEVICE_REGISTRATION_NOT_FOUND = "DeviceRegistrationNotFound"
    ASYNC_OPERATION_NOT_FOUND = "AsyncOperationNotFound"
    ENROLLMENT_GROUP_NOT_FOUND = "EnrollmentGroupNotFound"
    DEVICE_RECORD_NOT_FOUND = "DeviceRecordNotFound"
    GROUP_RECORD_NOT_FOUND = "GroupRecordNotFound"
    DEVICE_GROUP_NOT_FOUND = "DeviceGroupNotFound"
    PROVISIONING_SETTINGS_NOT_FOUND = "ProvisioningSettingsNotFound"
    PROVISIONING_RECORD_NOT_FOUND = "ProvisioningRecordNotFound"
    LINKED_HUB_NOT_FOUND = "LinkedHubNotFound"
    CERTIFICATE_AUTHORITY_NOT_FOUND = "CertificateAuthorityNotFound"
    CONFIGURATION_NOT_FOUND = "ConfigurationNotFound"
    GROUP_NOT_FOUND = "GroupNotFound"
    DIGITAL_TWIN_MODEL_NOT_FOUND = "DigitalTwinModelNotFound"
    INTERFACE_NAME_MODEL_NOT_FOUND = "InterfaceNameModelNotFound"
    GENERIC_METHOD_NOT_ALLOWED = "GenericMethodNotAllowed"
    OPERATION_NOT_ALLOWED_IN_CURRENT_STATE = "OperationNotAllowedInCurrentState"
    IMPORT_DEVICES_NOT_SUPPORTED = "ImportDevicesNotSupported"
    BULK_ADD_DEVICES_NOT_SUPPORTED = "BulkAddDevicesNotSupported"
    GENERIC_CONFLICT = "GenericConflict"
    DEVICE_ALREADY_EXISTS = "DeviceAlreadyExists"
    LINK_CREATION_CONFLICT = "LinkCreationConflict"
    CALLBACK_SUBSCRIPTION_CONFLICT = "CallbackSubscriptionConflict"
    MODEL_ALREADY_EXISTS = "ModelAlreadyExists"
    DEVICE_LOCKED = "DeviceLocked"
    DEVICE_JOB_ALREADY_EXISTS = "DeviceJobAlreadyExists"
    JOB_ALREADY_EXISTS = "JobAlreadyExists"
    ENROLLMENT_CONFLICT = "EnrollmentConflict"
    ENROLLMENT_GROUP_CONFLICT = "EnrollmentGroupConflict"
    REGISTRATION_STATUS_CONFLICT = "RegistrationStatusConflict"
    DEVICE_RECORD_CONFLICT = "DeviceRecordConflict"
    GROUP_RECORD_CONFLICT = "GroupRecordConflict"
    DEVICE_GROUP_CONFLICT = "DeviceGroupConflict"
    PROVISIONING_SETTINGS_CONFLICT = "ProvisioningSettingsConflict"
    PROVISIONING_RECORD_CONFLICT = "ProvisioningRecordConflict"
    LINKED_HUB_CONFLICT = "LinkedHubConflict"
    CERTIFICATE_AUTHORITY_CONFLICT = "CertificateAuthorityConflict"
    MODULE_ALREADY_EXISTS_ON_DEVICE = "ModuleAlreadyExistsOnDevice"
    CONFIGURATION_ALREADY_EXISTS = "ConfigurationAlreadyExists"
    APPLY_CONFIGURATION_ALREADY_IN_PROGRESS_ON_DEVICE = "ApplyConfigurationAlreadyInProgressOnDevice"
    DIGITAL_TWIN_MODEL_ALREADY_EXISTS = "DigitalTwinModelAlreadyExists"
    DIGITAL_TWIN_MODEL_EXISTS_WITH_OTHER_MODEL_TYPE = "DigitalTwinModelExistsWithOtherModelType"
    INTERFACE_NAME_MODEL_ALREADY_EXISTS = "InterfaceNameModelAlreadyExists"
    GENERIC_PRECONDITION_FAILED = "GenericPreconditionFailed"
    PRECONDITION_FAILED = "PreconditionFailed"
    DEVICE_MESSAGE_LOCK_LOST = "DeviceMessageLockLost"
    JOB_RUN_PRECONDITION_FAILED = "JobRunPreconditionFailed"
    INFLIGHT_MESSAGES_IN_LINK = "InflightMessagesInLink"
    GENERIC_REQUEST_ENTITY_TOO_LARGE = "GenericRequestEntityTooLarge"
    MESSAGE_TOO_LARGE = "MessageTooLarge"
    TOO_MANY_DEVICES = "TooManyDevices"
    TOO_MANY_MODULES_ON_DEVICE = "TooManyModulesOnDevice"
    CONFIGURATION_COUNT_LIMIT_EXCEEDED = "ConfigurationCountLimitExceeded"
    DIGITAL_TWIN_MODEL_COUNT_LIMIT_EXCEEDED = "DigitalTwinModelCountLimitExceeded"
    INTERFACE_NAME_COMPRESSION_MODEL_COUNT_LIMIT_EXCEEDED = "InterfaceNameCompressionModelCountLimitExceeded"
    GENERIC_UNSUPPORTED_MEDIA_TYPE = "GenericUnsupportedMediaType"
    INCOMPATIBLE_DATA_TYPE = "IncompatibleDataType"
    GENERIC_TOO_MANY_REQUESTS = "GenericTooManyRequests"
    THROTTLING_EXCEPTION = "ThrottlingException"
    THROTTLE_BACKLOG_LIMIT_EXCEEDED = "ThrottleBacklogLimitExceeded"
    THROTTLING_BACKLOG_TIMEOUT = "ThrottlingBacklogTimeout"
    THROTTLING_MAX_ACTIVE_JOB_COUNT_EXCEEDED = "ThrottlingMaxActiveJobCountExceeded"
    DEVICE_THROTTLING_LIMIT_EXCEEDED = "DeviceThrottlingLimitExceeded"
    CLIENT_CLOSED_REQUEST = "ClientClosedRequest"
    GENERIC_SERVER_ERROR = "GenericServerError"
    SERVER_ERROR = "ServerError"
    JOB_CANCELLED = "JobCancelled"
    STATISTICS_RETRIEVAL_ERROR = "StatisticsRetrievalError"
    CONNECTION_FORCEFULLY_CLOSED = "ConnectionForcefullyClosed"
    INVALID_BLOB_STATE = "InvalidBlobState"
    BACKUP_TIMED_OUT = "BackupTimedOut"
    AZURE_STORAGE_TIMEOUT = "AzureStorageTimeout"
    GENERIC_TIMEOUT = "GenericTimeout"
    INVALID_THROTTLE_PARAMETER = "InvalidThrottleParameter"
    EVENT_HUB_LINK_ALREADY_CLOSED = "EventHubLinkAlreadyClosed"
    RELIABLE_BLOB_STORE_ERROR = "ReliableBlobStoreError"
    RETRY_ATTEMPTS_EXHAUSTED = "RetryAttemptsExhausted"
    AZURE_TABLE_STORE_ERROR = "AzureTableStoreError"
    CHECKPOINT_STORE_NOT_FOUND = "CheckpointStoreNotFound"
    DOCUMENT_DB_INVALID_RETURN_VALUE = "DocumentDbInvalidReturnValue"
    RELIABLE_DOC_DB_STORE_STORE_ERROR = "ReliableDocDbStoreStoreError"
    RELIABLE_BLOB_STORE_TIMEOUT_ERROR = "ReliableBlobStoreTimeoutError"
    CONFIG_READ_FAILED = "ConfigReadFailed"
    INVALID_CONTAINER_RECEIVE_LINK = "InvalidContainerReceiveLink"
    INVALID_PARTITION_EPOCH = "InvalidPartitionEpoch"
    RESTORE_TIMED_OUT = "RestoreTimedOut"
    STREAM_RESERVATION_FAILURE = "StreamReservationFailure"
    SERIALIZATION_ERROR = "SerializationError"
    UNEXPECTED_PROPERTY_VALUE = "UnexpectedPropertyValue"
    ORCHESTRATION_OPERATION_FAILED = "OrchestrationOperationFailed"
    MODEL_REPO_ENDPOINT_ERROR = "ModelRepoEndpointError"
    RESOLUTION_ERROR = "ResolutionError"
    UNABLE_TO_FETCH_CREDENTIALS = "UnableToFetchCredentials"
    UNABLE_TO_FETCH_TENANT_INFO = "UnableToFetchTenantInfo"
    UNABLE_TO_SHARE_IDENTITY = "UnableToShareIdentity"
    UNABLE_TO_EXPAND_DISCOVERY_INFO = "UnableToExpandDiscoveryInfo"
    UNABLE_TO_EXPAND_COMPONENT_INFO = "UnableToExpandComponentInfo"
    UNABLE_TO_COMPRESS_COMPONENT_INFO = "UnableToCompressComponentInfo"
    UNABLE_TO_COMPRESS_DISCOVERY_INFO = "UnableToCompressDiscoveryInfo"
    ORPHAN_DISCOVERY_DOCUMENT = "OrphanDiscoveryDocument"
    GENERIC_BAD_GATEWAY = "GenericBadGateway"
    INVALID_RESPONSE_WHILE_PROXYING = "InvalidResponseWhileProxying"
    GENERIC_SERVICE_UNAVAILABLE = "GenericServiceUnavailable"
    SERVICE_UNAVAILABLE = "ServiceUnavailable"
    PARTITION_NOT_FOUND = "PartitionNotFound"
    IOT_HUB_ACTIVATION_FAILED = "IotHubActivationFailed"
    SERVER_BUSY = "ServerBusy"
    IOT_HUB_RESTORING = "IotHubRestoring"
    RECEIVE_LINK_OPENS_THROTTLED = "ReceiveLinkOpensThrottled"
    CONNECTION_UNAVAILABLE = "ConnectionUnavailable"
    DEVICE_UNAVAILABLE = "DeviceUnavailable"
    CONFIGURATION_NOT_AVAILABLE = "ConfigurationNotAvailable"
    GROUP_NOT_AVAILABLE = "GroupNotAvailable"
    HOSTING_SERVICE_NOT_AVAILABLE = "HostingServiceNotAvailable"
    GENERIC_GATEWAY_TIMEOUT = "GenericGatewayTimeout"
    GATEWAY_TIMEOUT = "GatewayTimeout"

class DeviceStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The status of the device. If the status disabled, a device cannot connect to the service.
    """

    ENABLED = "enabled"
    DISABLED = "disabled"

class ExportImportDeviceImportMode(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The type of registry operation and ETag preferences.
    """

    CREATE = "create"
    UPDATE = "update"
    UPDATE_IF_MATCH_E_TAG = "updateIfMatchETag"
    DELETE = "delete"
    DELETE_IF_MATCH_E_TAG = "deleteIfMatchETag"
    UPDATE_TWIN = "updateTwin"
    UPDATE_TWIN_IF_MATCH_E_TAG = "updateTwinIfMatchETag"

class ExportImportDeviceStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The status of the module. If disabled, the module cannot connect to the service.
    """

    ENABLED = "enabled"
    DISABLED = "disabled"

class JobPropertiesStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """System generated. Ignored at creation. The status of the job.
    """

    UNKNOWN = "unknown"
    ENQUEUED = "enqueued"
    RUNNING = "running"
    COMPLETED = "completed"
    FAILED = "failed"
    CANCELLED = "cancelled"
    SCHEDULED = "scheduled"
    QUEUED = "queued"

class JobPropertiesStorageAuthenticationType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The authentication type used for connecting to the storage account.
    """

    KEY_BASED = "keyBased"
    IDENTITY_BASED = "identityBased"

class JobPropertiesType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The job type.
    """

    UNKNOWN = "unknown"
    EXPORT = "export"
    IMPORT_ENUM = "import"
    BACKUP = "backup"
    READ_DEVICE_PROPERTIES = "readDeviceProperties"
    WRITE_DEVICE_PROPERTIES = "writeDeviceProperties"
    UPDATE_DEVICE_CONFIGURATION = "updateDeviceConfiguration"
    REBOOT_DEVICE = "rebootDevice"
    FACTORY_RESET_DEVICE = "factoryResetDevice"
    FIRMWARE_UPDATE = "firmwareUpdate"
    SCHEDULE_DEVICE_METHOD = "scheduleDeviceMethod"
    SCHEDULE_UPDATE_TWIN = "scheduleUpdateTwin"
    RESTORE_FROM_BACKUP = "restoreFromBackup"
    FAILOVER_DATA_COPY = "failoverDataCopy"

class JobRequestType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The job type.
    """

    UNKNOWN = "unknown"
    EXPORT = "export"
    IMPORT_ENUM = "import"
    BACKUP = "backup"
    READ_DEVICE_PROPERTIES = "readDeviceProperties"
    WRITE_DEVICE_PROPERTIES = "writeDeviceProperties"
    UPDATE_DEVICE_CONFIGURATION = "updateDeviceConfiguration"
    REBOOT_DEVICE = "rebootDevice"
    FACTORY_RESET_DEVICE = "factoryResetDevice"
    FIRMWARE_UPDATE = "firmwareUpdate"
    SCHEDULE_DEVICE_METHOD = "scheduleDeviceMethod"
    SCHEDULE_UPDATE_TWIN = "scheduleUpdateTwin"
    RESTORE_FROM_BACKUP = "restoreFromBackup"
    FAILOVER_DATA_COPY = "failoverDataCopy"

class JobResponseStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """System generated.  Ignored at creation. The status of the job.
    """

    UNKNOWN = "unknown"
    ENQUEUED = "enqueued"
    RUNNING = "running"
    COMPLETED = "completed"
    FAILED = "failed"
    CANCELLED = "cancelled"
    SCHEDULED = "scheduled"
    QUEUED = "queued"

class JobResponseType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The job type.
    """

    UNKNOWN = "unknown"
    EXPORT = "export"
    IMPORT_ENUM = "import"
    BACKUP = "backup"
    READ_DEVICE_PROPERTIES = "readDeviceProperties"
    WRITE_DEVICE_PROPERTIES = "writeDeviceProperties"
    UPDATE_DEVICE_CONFIGURATION = "updateDeviceConfiguration"
    REBOOT_DEVICE = "rebootDevice"
    FACTORY_RESET_DEVICE = "factoryResetDevice"
    FIRMWARE_UPDATE = "firmwareUpdate"
    SCHEDULE_DEVICE_METHOD = "scheduleDeviceMethod"
    SCHEDULE_UPDATE_TWIN = "scheduleUpdateTwin"
    RESTORE_FROM_BACKUP = "restoreFromBackup"
    FAILOVER_DATA_COPY = "failoverDataCopy"

class ModuleConnectionState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The connection state of the device.
    """

    DISCONNECTED = "Disconnected"
    CONNECTED = "Connected"

class PropertiesTopicspaceType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The string representing the type of topicspace.
    
    Supported values are ``LowFanout``\ , ``HighFanout`` and ``PublishOnly``
    """

    LOW_FANOUT = "LowFanout"
    HIGH_FANOUT = "HighFanout"
    PUBLISH_ONLY = "PublishOnly"

class QueryResultType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The query result type.
    """

    UNKNOWN = "unknown"
    TWIN = "twin"
    DEVICE_JOB = "deviceJob"
    JOB_RESPONSE = "jobResponse"
    RAW = "raw"
    ENROLLMENT = "enrollment"
    ENROLLMENT_GROUP = "enrollmentGroup"
    DEVICE_REGISTRATION = "deviceRegistration"

class TwinAuthenticationType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The authentication type used by the device.
    """

    SAS = "sas"
    SELF_SIGNED = "selfSigned"
    CERTIFICATE_AUTHORITY = "certificateAuthority"
    NONE = "none"

class TwinConnectionState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The connection state of the device.
    """

    DISCONNECTED = "Disconnected"
    CONNECTED = "Connected"

class TwinStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The enabled status of the device. If disabled, the device cannot connect to the service.
    """

    ENABLED = "enabled"
    DISABLED = "disabled"
