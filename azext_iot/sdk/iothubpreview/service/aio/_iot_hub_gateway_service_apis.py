# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.4.5, generator: @autorest/python@5.8.1)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional

from azure.core import AsyncPipelineClient
from azure.core.pipeline.transport import AsyncHttpResponse, HttpRequest
from msrest import Deserializer, Serializer

from ._configuration import IotHubGatewayServiceAPIsConfiguration
from .operations import ConfigurationOperations
from .operations import StatisticsOperations
from .operations import DevicesOperations
from .operations import BulkRegistryOperations
from .operations import QueryOperations
from .operations import JobsOperations
from .operations import CloudToDeviceMessagesOperations
from .operations import ModulesOperations
from .operations import DigitalTwinOperations
from .operations import TopicspaceOperations
from .. import models


class IotHubGatewayServiceAPIs(object):
    """IotHubGatewayServiceAPIs.

    :ivar configuration: ConfigurationOperations operations
    :vartype configuration: azure.iot.gateway.service.aio.operations.ConfigurationOperations
    :ivar statistics: StatisticsOperations operations
    :vartype statistics: azure.iot.gateway.service.aio.operations.StatisticsOperations
    :ivar devices: DevicesOperations operations
    :vartype devices: azure.iot.gateway.service.aio.operations.DevicesOperations
    :ivar bulk_registry: BulkRegistryOperations operations
    :vartype bulk_registry: azure.iot.gateway.service.aio.operations.BulkRegistryOperations
    :ivar query: QueryOperations operations
    :vartype query: azure.iot.gateway.service.aio.operations.QueryOperations
    :ivar jobs: JobsOperations operations
    :vartype jobs: azure.iot.gateway.service.aio.operations.JobsOperations
    :ivar cloud_to_device_messages: CloudToDeviceMessagesOperations operations
    :vartype cloud_to_device_messages: azure.iot.gateway.service.aio.operations.CloudToDeviceMessagesOperations
    :ivar modules: ModulesOperations operations
    :vartype modules: azure.iot.gateway.service.aio.operations.ModulesOperations
    :ivar digital_twin: DigitalTwinOperations operations
    :vartype digital_twin: azure.iot.gateway.service.aio.operations.DigitalTwinOperations
    :ivar topicspace: TopicspaceOperations operations
    :vartype topicspace: azure.iot.gateway.service.aio.operations.TopicspaceOperations
    :param str base_url: Service URL
    """

    def __init__(
        self,
        base_url: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        if not base_url:
            base_url = 'https://fully-qualified-iothubname.azure-devices.net'
        self._config = IotHubGatewayServiceAPIsConfiguration(**kwargs)
        self._client = AsyncPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.configuration = ConfigurationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.statistics = StatisticsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.devices = DevicesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.bulk_registry = BulkRegistryOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.query = QueryOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.jobs = JobsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.cloud_to_device_messages = CloudToDeviceMessagesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.modules = ModulesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.digital_twin = DigitalTwinOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.topicspace = TopicspaceOperations(
            self._client, self._config, self._serialize, self._deserialize)

    async def _send_request(self, http_request: HttpRequest, **kwargs: Any) -> AsyncHttpResponse:
        """Runs the network request through the client's chained policies.

        :param http_request: The network request you want to make. Required.
        :type http_request: ~azure.core.pipeline.transport.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to True.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.pipeline.transport.AsyncHttpResponse
        """
        http_request.url = self._client.format_url(http_request.url)
        stream = kwargs.pop("stream", True)
        pipeline_response = await self._client._pipeline.run(http_request, stream=stream, **kwargs)
        return pipeline_response.http_response

    async def close(self) -> None:
        await self._client.close()

    async def __aenter__(self) -> "IotHubGatewayServiceAPIs":
        await self._client.__aenter__()
        return self

    async def __aexit__(self, *exc_details) -> None:
        await self._client.__aexit__(*exc_details)
